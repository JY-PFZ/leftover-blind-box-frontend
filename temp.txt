<template>
  <main class="home">
    <div class="hero">
      <h1>Welcome to Magic Bag</h1>
      <p>The sweetest candies & desserts in town</p>
      <button>Shop Now</button>
    </div>

    <!-- 筛选和排序控件 (TODO) -->
    <div class="filters">
      <!-- 这里未来会放排序和筛选的下拉菜单或按钮 -->
      <p style="text-align: center; padding: 20px; color: #888;">
        （排序和筛选控件将放在这里）
      </p>
    </div>

    <!-- 商品展示区 -->
    <div v-if="loading" class="loading-state">正在加载商品...</div>
    <div v-else-if="error" class="error-state">
      加载商品失败，请稍后再试。<br>
      (错误: {{ error }})
    </div>
    <div v-else class="products">
      <div class="product-card" v-for="bag in magicBags" :key="bag.id">
        <div class="product-img" :style="{ backgroundImage: `url(${bag.imageUrl || 'https://placehold.co/300x200/cccccc/ffffff?text=No+Image'})` }"></div>
        <h3>{{ bag.title }}</h3>
        <p>${{ bag.price }}</p>
        <button>加入购物车</button>
      </div>
    </div>
  </main>
</template>

<script setup>
import { ref, onMounted } from 'vue';
import { fetchMagicBags } from '../services/magicBagService.js';

const magicBags = ref([]);
const loading = ref(true);
const error = ref(null);

onMounted(async () => {
  // ===================================================================
  // [模式一]：当前正在使用模拟数据 (Mock Data)
  // 当后端 API 未准备好时，请使用此部分进行开发
  // ===================================================================
  const mockMagicBags = [
    { id: 1, title: '面包盲盒', price: 9.99, imageUrl: 'https://placehold.co/300x200/f39c12/ffffff?text=%E9%9D%A2%E5%8C%85' },
    { id: 2, title: '甜甜圈惊喜', price: 12.50, imageUrl: 'https://placehold.co/300x200/e74c3c/ffffff?text=%E7%94%9C%E7%94%9C%E5%9C%88' },
    { id: 3, title: '蛋糕派对', price: 15.00, imageUrl: 'https://placehold.co/300x200/9b59b6/ffffff?text=%E8%9B%8B%E7%B3%95' },
    { id: 4, title: '曲奇时光', price: 8.88, imageUrl: 'https://placehold.co/300x200/3498db/ffffff?text=%E6%9B%B2%E5%A5%87' },
    { id: 5, title: '水果挞组合', price: 18.90, imageUrl: 'https://placehold.co/300x200/2ecc71/ffffff?text=%E6%B0%B4%E6%9E%9C%E6%8C%9E' },
    { id: 6, title: '神秘饮料', price: 5.00, imageUrl: 'https://placehold.co/300x200/1abc9c/ffffff?text=%E9%A5%AE%E6%96%99' },
  ];
  magicBags.value = mockMagicBags;
  loading.value = false;
  // ====================== 模拟数据部分结束 =========================


  /*
  // ===================================================================
  // [模式二]：真实 API 请求 (Real API Request)
  // 当后端 API 准备好后，请注释掉上面的 [模式一]，并取消下面的注释
  // ===================================================================
  try {
    loading.value = true;
    const response = await fetchMagicBags({ page: 1, limit: 10 });
    magicBags.value = response.data.records || response.data;
  } catch (err) {
    console.error('获取魔法口袋失败:', err);
    error.value = err.message || '未知网络错误';
  } finally {
    loading.value = false;
  }
  // ====================== 真实 API 请求结束 ========================
  */
});

</script>

<style scoped>
/* 样式保持不变 */
.home {
  max-width: 1400px;
  margin: 0 auto;
  padding: 40px 20px;
}

.hero {
  text-align: center;
  padding: 60px 20px;
  background: #fff3e6;
  border-radius: 12px;
  margin-bottom: 40px;
}

.hero h1 {
  font-size: 48px;
  color: #e74c3c;
  margin-bottom: 15px;
}

.hero p {
  font-size: 20px;
  color: #555;
  margin-bottom: 30px;
}

.hero button {
  background: #e74c3c;
  color: white;
  padding: 15px 30px;
  border: none;
  border-radius: 5px;
  font-size: 18px;
  cursor: pointer;
}

.products {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 25px;
}

.product-card {
  background: white;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 4px 10px rgba(0,0,0,0.1);
  text-align: center;
  padding: 15px;
  transition: transform 0.2s;
}

.product-card:hover {
    transform: translateY(-5px);
}

.product-img {
  height: 180px;
  background-color: #f8f9fa;
  border-radius: 8px;
  margin-bottom: 10px;
  background-size: cover;
  background-position: center;
}

.product-card h3 {
  margin-bottom: 10px;
  color: #333;
}

.product-card p {
  color: #e74c3c;
  font-weight: bold;
  margin-bottom: 15px;
}

.product-card button {
  background: #27ae60;
  color: white;
  padding: 8px 16px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.loading-state, .error-state {
  text-align: center;
  padding: 50px;
  font-size: 1.2rem;
  color: #555;
}

.error-state {
  color: #e74c3c;
}
</style>

